import * as React from "react"
import { ControlType, PropertyControls, Size } from "framer"

interface Props extends Size {
    images: string[]
}

interface State {
    index: number
}

function fixBrokenUrl(incomingUrl) {
    const urlObj = new URL(incomingUrl)
    const count = (
        urlObj.pathname.match(new RegExp(urlObj.hostname, "g")) || []
    ).length
    let urlPathname = urlObj.pathname
    for (let i = 0; i < count; i++) {
        urlPathname = decodeURIComponent(urlPathname)
    }

    const fixedUrlPathname = urlPathname
        .replace(new RegExp("/" + urlObj.origin, "g"), "")
        .split("/")
        .filter(Boolean)
        .join("/")

    const url = [urlObj.origin, fixedUrlPathname].join("/")
    return url
}

export class ShuffleImage extends React.Component<Props, State> {
    constructor(props: Props) {
        super(props)

        this.state = {
            index: this.generateIndex(),
        }
    }

    generateIndex() {
        return Math.floor(Math.random() * this.props.images.length)
    }

    render() {
        if (!this.props.images.length)
            return (
                <div style={placeholderStyle}>
                    Add images on properties panel
                </div>
            )
        const url = fixBrokenUrl(this.props.images[this.state.index])
        console.log(url)

        return (
            <div
                style={{
                    width: this.props.width,
                    height: this.props.height,
                    backgroundImage: `url("${url}")`,
                    backgroundRepeat: "no-repeat",
                    backgroundSize: "contain",
                    backgroundPosition: "center",
                }}
            />
        )
    }

    static propertyControls: PropertyControls = {
        images: {
            title: "Image",
            type: ControlType.Array,
            propertyControl: { type: ControlType.Image },
        },
    }

    static defaultProps = {
        images: [],
    }
}

const placeholderStyle: React.CSSProperties = {
    width: "100%",
    height: "100%",
    display: "flex",
    padding: 10,
    justifyContent: "center",
    alignItems: "center",
    textAlign: "center",
    backgroundColor: "#8855FF22",
    color: "#8855FF",
}
