// const bottom = lastMessageRef.current
//     ? lastMessageRef.current.offsetTop +
//       lastMessageRef.current.offsetHeight
//     : 0
// const totalHeight = bottom - top
// // const newMessage =
// //     messages.length > 0
// //         ? messages[messages.length - 1].timestamp > mountTime.current
// //         : false
// const newMessage = window.chatMessageCount !== messages.length
// window.chatMessageCount = messages.length

// // console.log("RENDER")

// if (lastMessageRef.current)
//     console.log(lastMessageRef.current.offsetHeight)

// if (scrollHeight >= props.height) {
//     const scrollAnimProps = {
//         y: -scrollHeight + props.height,
//         transition: { type: "spring", damping: 30, stiffness: 600 },
//     }

//     if (newMessage) {
//         console.log("NEW MESSGE")
//         window.chatInitialScroll -= lastMessageRef.current.offsetHeight
//         scrollControls.start({
//             y: window.chatInitialScroll,
//             transition: { type: "spring", damping: 30, stiffness: 600 },
//         })

//         // window.chatMessageCount = messages.length
//     }
//     // else scrollControls.set({ y: -scrollHeight + props.height })
//     else if (!window.chatInitialScroll) {
//         window.chatInitialScroll = -scrollHeight + props.height
//         window.chatMessageCount = messages.length
//         scrollControls.set({ y: -scrollHeight + props.height })
//     } else scrollControls.set({ y: window.chatInitialScroll })
// }

// if (!window.chatInitialScroll) setScrollHeight(totalHeight)
// else setScrollHeight(window.chatInitialScroll * -1 + props.height)

// useLayoutEffect(() => {
//     window.chatInitialScroll = undefined
//     window.chatMessageCount = undefined
// }, [])

// useLayoutEffect(() => {
//     const top = firstMessageRef.current
//         ? firstMessageRef.current.offsetTop
//         : 0
//     const bottom = lastMessageRef.current
//         ? lastMessageRef.current.offsetTop +
//           lastMessageRef.current.offsetHeight
//         : 0
//     const totalHeight = bottom - top
//     const newMessage =
//         window.chatMessageCount > -1 &&
//         window.chatMessageCount !== messages.length

//     console.table([
//         ["window.chatInitialScroll", window.chatInitialScroll],
//         ["window.chatMessageCount", window.chatMessageCount],
//         ["props.height", props.height],
//         ["new message", newMessage],
//         ["scrollHeight", scrollHeight],
//         ["messages.length", messages.length],
//         ["bottom", bottom || "doesn't exist"],
//         ["totalHeight", totalHeight],
//     ])
//     window.chatMessageCount = messages.length

//     if (scrollHeight >= props.height) {
//         if (newMessage) {
//             window.chatInitialScroll -= lastMessageRef.current.offsetHeight
//             scrollControls.start({
//                 y: window.chatInitialScroll,
//                 transition: { type: "spring", damping: 30, stiffness: 600 },
//             })
//         } else if (!window.chatInitialScroll) {
//             window.chatInitialScroll = -totalHeight + props.height
//             window.chatMessageCount = messages.length
//             scrollControls.set({ y: -totalHeight + props.height })
//         } else scrollControls.set({ y: window.chatInitialScroll })
//     }

//     if (!window.chatInitialScroll) setScrollHeight(totalHeight)
//     else setScrollHeight(window.chatInitialScroll * -1 + props.height)
// })

// const { messages, darkMode, accentColor } = props
// const firstMessageRef = useRef<HTMLDivElement>(null)
// const lastMessageRef = useRef<HTMLDivElement>(null)
// const mountTime = useRef(Date.now())
// const [scrollHeight, setScrollHeight] = useState(0)
// const scrollControls = useAnimation()
// const renderedOnce = useRef(false)

// const scrollInnerEl = useRef<HTMLDivElement>(null)

// useLayoutEffect(() => {
//     window.chatInitialScroll = undefined
//     window.chatMessageCount = undefined
// }, [])

// useLayoutEffect(() => {
//     const top = firstMessageRef.current
//         ? firstMessageRef.current.offsetTop
//         : 0
//     const bottom = lastMessageRef.current
//         ? lastMessageRef.current.offsetTop +
//           lastMessageRef.current.offsetHeight
//         : 0

//     const bottomDistance = lastMessageRef.current
//         ? lastMessageRef.current.offsetTop
//         : 0
//     const bottomHeight = lastMessageRef.current
//         ? lastMessageRef.current.offsetHeight
//         : 0

//     const totalHeight = bottom - top
//     const newMessage =
//         window.chatMessageCount > -1 &&
//         window.chatMessageCount !== messages.length

//     console.log("FUCK")

//     console.table([
//         ["window.chatInitialScroll", window.chatInitialScroll],
//         ["window.chatMessageCount", window.chatMessageCount],
//         ["props.height", props.height],
//         ["new message", newMessage],
//         ["scrollHeight", scrollHeight],
//         ["messages.length", messages.length],
//         ["bottom H", bottomHeight || "doesn't exist"],
//         ["bottom D", bottomDistance || "doesn't exist"],
//         ["totalHeight", totalHeight],
//     ])
//     window.chatMessageCount = messages.length

//     if (scrollHeight >= props.height) {
//         if (newMessage) {
//             window.chatInitialScroll -= lastMessageRef.current.offsetHeight
//             scrollControls.start({
//                 y: window.chatInitialScroll,
//                 transition: { type: "spring", damping: 30, stiffness: 600 },
//             })
//         } else if (!window.chatInitialScroll) {
//             window.chatInitialScroll = -totalHeight + props.height
//             window.chatMessageCount = messages.length
//             scrollControls.set({ y: -totalHeight + props.height })
//         } else scrollControls.set({ y: window.chatInitialScroll })
//     }

//     if (!window.chatInitialScroll) setScrollHeight(totalHeight)
//     else setScrollHeight(window.chatInitialScroll * -1 + props.height)
// })

// <Guide.CodeBlock
//   lanuage="jsx"
//   theme='light'
//   code={`

//     message = {
//         text: "Iâ€™m great! How are you?",
//         author: 32348153483,
//         timestamp: "12/09/2019, 00:16:37",
//     }

// `}
// />
