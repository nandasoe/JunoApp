import * as React from "react"
import { PropertyControls, ControlType } from "framer"
import { MarkerState } from "framer-controller/dist/types"

interface Props extends Partial<MarkerState> {
    markerId: string
}

export class ScrollMarker extends React.Component<Props> {
    render() {
        const {
            visible,
            clip,
            offset,
            absolute,
            markerId,
            intersect,
            progress,
        } = this.props

        if (!absolute) {
            return (
                <div style={style}>
                    <Title heading="markerId" value={markerId} />
                    <div
                        style={{
                            display: "flex",
                            flexDirection: "column",
                            paddingBottom: 8,
                            maxWidth: 160,
                            width: "100%",
                            margin: "0 auto",
                        }}
                    >
                        <p>
                            To use, place into a Frame and connect that frame to
                            a Scroll component, then override the Scroll and
                            this Marker with the Overrides found in the Store
                            description of this package. In the Preview window,
                            you'll see information about this component's
                            intersection, clip state, and other data provided by
                            the Scroll Controller.
                        </p>
                        <p>
                            See the{" "}
                            <a href="https://framer-controller.netlify.com">
                                framer-controller docs
                            </a>{" "}
                            for more info and examples.
                        </p>
                    </div>
                </div>
            )
        }

        return (
            <div style={style}>
                <Title heading="markerId" value={markerId} />
                <Section
                    heading="intersect"
                    values={Object.keys(intersect).map(k => ({
                        label: k,
                        value: intersect[k],
                    }))}
                />
                <Section
                    heading="progress"
                    values={Object.keys(progress).map(k => ({
                        label: k,
                        value: progress[k],
                    }))}
                />
                <Section
                    heading="clip"
                    values={Object.keys(clip).map(k => ({
                        label: k,
                        value: clip[k],
                    }))}
                />
                <Section
                    heading="offset"
                    values={Object.keys(offset).map(k => ({
                        label: k,
                        value: offset[k],
                    }))}
                />
                <Section
                    heading="absolute"
                    values={Object.keys(absolute).map(k => ({
                        label: k,
                        value: absolute[k],
                    }))}
                />
            </div>
        )
    }

    static defaultProps: Props = {
        markerId: "Marker",
    }

    static propertyControls: PropertyControls<Props> = {
        markerId: { type: ControlType.String, title: "markerId" },
    }
}

// Define some standard CSS for your component
const style: React.CSSProperties = {
    height: "100%",
    display: "flex",
    flexDirection: "column",
    justifyContent: "center",
    color: "#8855FF",
    background: "rgba(136, 85, 255, 0.1)",
    overflow: "hidden",
    fontSize: 8,
}

type Value = {
    label: string
    value: string | number
}

type SectionProps = {
    heading: string
    values: Value[]
}

const Section: React.SFC<SectionProps> = ({ heading, values }) => {
    return (
        <div
            style={{
                display: "flex",
                flexDirection: "column",
                paddingBottom: 8,
                maxWidth: 96,
                width: "100%",
                margin: "0 auto",
            }}
        >
            <div>
                <b>{heading}</b>
            </div>
            <div style={{ display: "grid", gridTemplateColumns: "1fr 2fr" }}>
                {values.map(({ label, value }, index) => (
                    <div key={`${heading}_${label}_${value}_${index}`}>
                        <span style={{ paddingLeft: 8 }}>
                            <b>{label}</b>
                        </span>
                        <span style={{ textAlign: "right" }}>
                            {typeof value === "number"
                                ? value.toFixed(2)
                                : value}
                        </span>
                    </div>
                ))}
            </div>
        </div>
    )
}

const Title: React.SFC<{ heading: string; value: string }> = ({
    heading,
    value,
}) => {
    return (
        <div
            style={{
                display: "flex",
                flexDirection: "row",
                justifyContent: "space-between",
                paddingBottom: 8,
                maxWidth: 96,
                width: "100%",
                margin: "0 auto",
            }}
        >
            <span>
                <b>{heading}</b>
            </span>
            <span style={{ textAlign: "right" }}>{value}</span>
        </div>
    )
}
